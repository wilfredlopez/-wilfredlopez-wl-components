{"version":3,"file":"StackManager.js","sourceRoot":"","sources":["../../src/ReactRouter/StackManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { generateId, isDevMode } from \"../utils\";\n\nimport {\n  RouteManagerContext,\n  RouteManagerContextState,\n} from \"./RouteManagerContext\";\nimport { View } from \"./View\";\nimport { ViewItem } from \"./ViewItem\";\nimport { ViewTransitionManager } from \"./ViewTransitionManager\";\n\ninterface StackManagerProps {\n  id?: string;\n  routeManager: RouteManagerContextState;\n  children?: React.ReactNode;\n}\n\ninterface StackManagerState {}\n\nclass StackManagerInner extends React.Component<\n  StackManagerProps,\n  StackManagerState\n> {\n  routerOutletEl: React.RefObject<\n    HTMLWlRouterOutletElement\n  > = React.createRef();\n  id: string;\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.id = this.props.id || generateId();\n    this.handleViewSync = this.handleViewSync.bind(this);\n    this.handleHideView = this.handleHideView.bind(this);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.routeManager.setupWlRouter(\n      this.id,\n      this.props.children,\n      this.routerOutletEl.current!\n    );\n  }\n\n  static getDerivedStateFromProps(\n    props: StackManagerProps,\n    state: StackManagerState\n  ) {\n    props.routeManager.syncRoute(props.children);\n    return state;\n  }\n\n  componentWillUnmount() {\n    this.props.routeManager.removeViewStack(this.id);\n  }\n\n  handleViewSync(page: HTMLElement, viewId: string) {\n    this.props.routeManager.syncView(page, viewId);\n  }\n\n  handleHideView(viewId: string) {\n    this.props.routeManager.hideView(viewId);\n  }\n\n  renderChild(item: ViewItem, route: any) {\n    const component = React.cloneElement(route, {\n      computedMatch: item.routeData.match,\n    });\n    return component;\n  }\n\n  render() {\n    const routeManager = this.props.routeManager;\n    const viewStack = routeManager.viewStacks.get(this.id);\n    const views = (viewStack || { views: [] }).views.filter((x) => x.show);\n    const wlRouterOutlet = React.Children.only(\n      this.props.children\n    ) as React.ReactElement;\n    const childElements = views.map((view) => {\n      const route = routeManager.getRoute(view.routeId);\n      return (\n        <ViewTransitionManager id={view.id} key={view.key} mount={view.mount}>\n          <View\n            onViewSync={this.handleViewSync}\n            onHideView={this.handleHideView}\n            view={view}\n            route={route}\n          >\n            {this.renderChild(view, route)}\n          </View>\n        </ViewTransitionManager>\n      );\n    });\n\n    const elementProps: any = {\n      ref: this.routerOutletEl,\n    };\n\n    if (wlRouterOutlet.props.forwardedRef) {\n      wlRouterOutlet.props.forwardedRef.current = this.routerOutletEl;\n    }\n\n    if (isDevMode()) {\n      elementProps[\"data-stack-id\"] = this.id;\n    }\n\n    const routerOutletChild = React.cloneElement(\n      wlRouterOutlet,\n      elementProps,\n      childElements\n    );\n\n    return routerOutletChild;\n  }\n}\n\nconst withContext = (Component: any) => {\n  return (props: any) => (\n    <RouteManagerContext.Consumer>\n      {(context) => <Component {...props} routeManager={context} />}\n    </RouteManagerContext.Consumer>\n  );\n};\n\nexport const StackManager = withContext(StackManagerInner);\n"]}