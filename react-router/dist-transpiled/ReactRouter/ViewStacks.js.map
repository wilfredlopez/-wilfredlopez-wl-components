{"version":3,"file":"ViewStacks.js","sourceRoot":"","sources":["../../src/ReactRouter/ViewStacks.ts"],"names":[],"mappings":"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","sourcesContent":["import { Location as HistoryLocation } from \"history\";\nimport { matchPath } from \"react-router-dom\";\n\nimport { WlRouteData } from \"./WlRouteData\";\nimport { ViewItem } from \"./ViewItem\";\n\nexport interface ViewStack {\n  id: string;\n  views: ViewItem[];\n}\n\n/**\n * The holistic view of all the Routes configured for an application inside of an IonRouterOutlet.\n */\nexport class ViewStacks {\n  private viewStacks: { [key: string]: ViewStack | undefined } = {};\n\n  get(key: string) {\n    return this.viewStacks[key];\n  }\n\n  set(key: string, viewStack: ViewStack) {\n    this.viewStacks[key] = viewStack;\n  }\n\n  getKeys() {\n    return Object.keys(this.viewStacks);\n  }\n\n  delete(key: string) {\n    delete this.viewStacks[key];\n  }\n\n  findViewInfoByLocation(location: HistoryLocation, viewKey: string) {\n    let view: ViewItem<WlRouteData> | undefined;\n    let match: WlRouteData[\"match\"] | null | undefined;\n    let viewStack: ViewStack | undefined;\n\n    viewStack = this.viewStacks[viewKey];\n    if (viewStack) {\n      viewStack.views.some(matchView);\n\n      if (!view) {\n        viewStack.views.some((r) => {\n          // try to find a route that doesn't have a path or from prop, that will be our not found route\n          if (!r.routeData.childProps.path && !r.routeData.childProps.from) {\n            match = {\n              path: location.pathname,\n              url: location.pathname,\n              isExact: true,\n              params: {},\n            };\n            view = r;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n\n    return { view, viewStack, match };\n\n    function matchView(v: ViewItem) {\n      const matchProps = {\n        exact: v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch: WlRouteData[\"match\"] | null | undefined = matchPath(\n        location.pathname,\n        matchProps\n      );\n      if (myMatch) {\n        view = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n  }\n\n  findViewInfoById(id = \"\") {\n    let view: ViewItem<WlRouteData> | undefined;\n    let viewStack: ViewStack | undefined;\n    const keys = this.getKeys();\n    keys.some((key) => {\n      const vs = this.viewStacks[key];\n      view = vs!.views.find((x) => x.id === id);\n      if (view) {\n        viewStack = vs;\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return { view, viewStack };\n  }\n}\n"]}