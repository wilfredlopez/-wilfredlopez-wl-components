{"version":3,"file":"View.js","sourceRoot":"","sources":["../../src/ReactRouter/View.tsx"],"names":[],"mappings":"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","sourcesContent":["import { NavContext, WlLifeCycleContext } from '@wilfredlopez/react';\nimport React from 'react';\nimport { Redirect } from 'react-router';\n\nimport { isDevMode } from '../utils';\n\nimport { ViewItem } from './ViewItem';\n\ninterface ViewProps extends React.HTMLAttributes<HTMLElement> {\n  onViewSync: (page: HTMLElement, viewId: string) => void;\n  onHideView: (viewId: string) => void;\n  view: ViewItem;\n  route: any;\n}\n\n/**\n * The View component helps manage the WlPage's lifecycle and registration\n */\nexport class View extends React.Component<ViewProps, {}> {\n  context!: React.ContextType<typeof WlLifeCycleContext>;\n  wlPage?: HTMLElement;\n\n  componentDidMount() {\n    /**\n     * If we can tell if view is a redirect, hide it so it will work again in future\n     */\n    const { view, route } = this.props;\n    if (route.type === Redirect) {\n      this.props.onHideView(view.id);\n    } else if (route.props.render && !view.isWlRoute) {\n      // Test the render to see if it returns a redirect\n      if (route.props.render().type === Redirect) {\n        this.props.onHideView(view.id);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.wlPage) {\n      this.wlPage.removeEventListener(\n        'wlViewWillEnter',\n        this.wlViewWillEnterHandler.bind(this)\n      );\n      this.wlPage.removeEventListener(\n        'wlViewDidEnter',\n        this.wlViewDidEnterHandler.bind(this)\n      );\n      this.wlPage.removeEventListener(\n        'wlViewWillLeave',\n        this.wlViewWillLeaveHandler.bind(this)\n      );\n      this.wlPage.removeEventListener(\n        'wlViewDidLeave',\n        this.wlViewDidLeaveHandler.bind(this)\n      );\n    }\n  }\n\n  wlViewWillEnterHandler() {\n    this.context.wlViewWillEnter();\n  }\n\n  wlViewDidEnterHandler() {\n    this.context.wlViewDidEnter();\n  }\n\n  wlViewWillLeaveHandler() {\n    this.context.wlViewWillLeave();\n  }\n\n  wlViewDidLeaveHandler() {\n    this.context.wlViewDidLeave();\n  }\n\n  registerWlPage(page: HTMLElement) {\n    this.wlPage = page;\n    this.wlPage.addEventListener(\n      'wlViewWillEnter',\n      this.wlViewWillEnterHandler.bind(this)\n    );\n    this.wlPage.addEventListener(\n      'wlViewDidEnter',\n      this.wlViewDidEnterHandler.bind(this)\n    );\n    this.wlPage.addEventListener(\n      'wlViewWillLeave',\n      this.wlViewWillLeaveHandler.bind(this)\n    );\n    this.wlPage.addEventListener(\n      'wlViewDidLeave',\n      this.wlViewDidLeaveHandler.bind(this)\n    );\n    this.wlPage.classList.add('wl-page-invisible');\n    if (isDevMode()) {\n      this.wlPage.setAttribute('data-view-id', this.props.view.id);\n    }\n    this.props.onViewSync(page, this.props.view.id);\n  }\n\n  render() {\n    return (\n      <NavContext.Consumer>\n        {value => {\n          const newProvider = {\n            ...value,\n            registerWlPage: this.registerWlPage.bind(this),\n          };\n\n          return (\n            <NavContext.Provider value={newProvider}>\n              {this.props.children}\n            </NavContext.Provider>\n          );\n        }}\n      </NavContext.Consumer>\n    );\n  }\n\n  static get contextType() {\n    return WlLifeCycleContext;\n  }\n}\n"]}