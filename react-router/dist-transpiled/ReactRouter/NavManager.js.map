{"version":3,"file":"NavManager.js","sourceRoot":"","sources":["../../src/ReactRouter/NavManager.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAmB,MAAM,qBAAqB,CAAC;AAElE,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAO9C,MAAM,OAAO,UAAW,SAAQ,KAAK,CAAC,SAGrC;IAGC,YAAY,KAAsB;QAChC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAClC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9C,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ;YACzC,cAAc,EAAE,GAAG,EAAE;gBACnB,OAAO;YACT,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CACvD,CAAC,QAAyB,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,QAAQ,CAAC,QAAQ;aAC/B,CAAC,CAAC;QACL,CAAC,CACF,CAAC;QAEF,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,CAAM,EAAE,EAAE;gBACnD,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE;oBACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;IACH,CAAC;IAED,MAAM,CAAC,WAAoB;QACzB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ,CACN,IAAY,EACZ,SAAoC,EACpC,gBAA+B,MAAM;QAErC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,eAAe;QACb,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,OAAO,CACL,oBAAC,UAAU,CAAC,QAAQ,IAAC,KAAK,EAAE,IAAI,CAAC,KAAK,IACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CACA,CACvB,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { RouterDirection } from \"@wilfredlopez/wl-components/dist/types/interfaces/RouterDirection\";\n\nimport { NavContext, NavContextState } from \"@wilfredlopez/react\";\nimport { Location as HistoryLocation, UnregisterCallback } from \"history\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport { WlRouteAction } from \"./wlRouteAction\";\nimport { StackManager } from \"./StackManager\";\n\ninterface NavManagerProps extends RouteComponentProps {\n  onNavigateBack: (defaultHref?: string) => void;\n  onNavigate: (WlRouteAction: WlRouteAction, path: string, state?: any) => void;\n}\n\nexport class NavManager extends React.Component<\n  NavManagerProps,\n  NavContextState\n> {\n  listenUnregisterCallback: UnregisterCallback | undefined;\n\n  constructor(props: NavManagerProps) {\n    super(props);\n    this.state = {\n      goBack: this.goBack.bind(this),\n      hasWlRouter: () => true,\n      navigate: this.navigate.bind(this),\n      getStackManager: this.getStackManager.bind(this),\n      getPageManager: this.getPageManager.bind(this),\n      currentPath: this.props.location.pathname,\n      registerWlPage: () => {\n        return;\n      }, // overridden in View for each WlPage\n    };\n\n    this.listenUnregisterCallback = this.props.history.listen(\n      (location: HistoryLocation) => {\n        this.setState({\n          currentPath: location.pathname,\n        });\n      }\n    );\n\n    if (document) {\n      document.addEventListener(\"wlBackButton\", (e: any) => {\n        e.detail.register(0, () => {\n          this.props.history.goBack();\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenUnregisterCallback) {\n      this.listenUnregisterCallback();\n    }\n  }\n\n  goBack(defaultHref?: string) {\n    this.props.onNavigateBack(defaultHref);\n  }\n\n  navigate(\n    path: string,\n    direction?: RouterDirection | \"none\",\n    wlRouteAction: WlRouteAction = \"push\"\n  ) {\n    this.props.onNavigate(wlRouteAction, path, direction);\n  }\n\n  getPageManager() {\n    return (children: any) => children;\n  }\n\n  getStackManager() {\n    return StackManager;\n  }\n\n  render() {\n    return (\n      <NavContext.Provider value={this.state}>\n        {this.props.children}\n      </NavContext.Provider>\n    );\n  }\n}\n"]}